{"remainingRequest":"/home/prashanth/Projects/pupilfirst/node_modules/babel-loader/lib/index.js??ref--9-1!/home/prashanth/Projects/pupilfirst/node_modules/@docusaurus/theme-common/lib/utils/storageUtils.js","dependencies":[{"path":"/home/prashanth/Projects/pupilfirst/node_modules/@docusaurus/theme-common/lib/utils/storageUtils.js","mtime":1646972643077},{"path":"/home/prashanth/Projects/pupilfirst/node_modules/cache-loader/dist/cjs.js","mtime":1646972628610},{"path":"/home/prashanth/Projects/pupilfirst/node_modules/babel-loader/lib/index.js","mtime":1646972593924}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOy8qKgogKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy4KICoKICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlCiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4KICovT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIl9fZXNNb2R1bGUiLHt2YWx1ZTp0cnVlfSk7ZXhwb3J0cy5saXN0U3RvcmFnZUtleXM9ZXhwb3J0cy5jcmVhdGVTdG9yYWdlU2xvdD12b2lkIDA7Y29uc3QgU3RvcmFnZVR5cGVzPVsnbG9jYWxTdG9yYWdlJywnc2Vzc2lvblN0b3JhZ2UnLCdub25lJ107Y29uc3QgRGVmYXVsdFN0b3JhZ2VUeXBlPSdsb2NhbFN0b3JhZ2UnOy8vIFdpbGwgcmV0dXJuIG51bGwgYnJvd3NlciBzdG9yYWdlIGlzIHVuYXZhaWxhYmxlIChsaWtlIHJ1bm5pbmcgRG9jdXNhdXJ1cyBpbiBpZnJhbWUpCi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svZG9jdXNhdXJ1cy9wdWxsLzQ1MDEKZnVuY3Rpb24gZ2V0QnJvd3NlclN0b3JhZ2Uoc3RvcmFnZVR5cGU9RGVmYXVsdFN0b3JhZ2VUeXBlKXtpZih0eXBlb2Ygd2luZG93PT09J3VuZGVmaW5lZCcpe3Rocm93IG5ldyBFcnJvcignQnJvd3NlciBzdG9yYWdlIGlzIG5vdCBhdmFpbGFibGUgb24gTm9kZUpTIC8gRG9jdXNhdXJ1cyBTU1IgcHJvY2VzcycpO31pZihzdG9yYWdlVHlwZT09PSdub25lJyl7cmV0dXJuIG51bGw7fWVsc2V7dHJ5e3JldHVybiB3aW5kb3dbc3RvcmFnZVR5cGVdO31jYXRjaChlKXtsb2dPbmNlQnJvd3NlclN0b3JhZ2VOb3RBdmFpbGFibGVXYXJuaW5nKGUpO3JldHVybiBudWxsO319fS8qKgogKiBQb29yIG1hbidzIG1lbW9pemF0aW9uIHRvIGF2b2lkIGxvZ2dpbmcgbXVsdGlwbGUgdGltZXMgdGhlIHNhbWUgd2FybmluZwogKiBTb21ldGltZXMsIGxvY2FsU3RvcmFnZS9zZXNzaW9uU3RvcmFnZSBpcyB1bmF2YWlsYWJsZSBkdWUgdG8gYnJvd3NlciBwb2xpY2llcwogKi9sZXQgaGFzTG9nZ2VkQnJvd3NlclN0b3JhZ2VOb3RBdmFpbGFibGVXYXJuaW5nPWZhbHNlO2Z1bmN0aW9uIGxvZ09uY2VCcm93c2VyU3RvcmFnZU5vdEF2YWlsYWJsZVdhcm5pbmcoZXJyb3Ipe2lmKCFoYXNMb2dnZWRCcm93c2VyU3RvcmFnZU5vdEF2YWlsYWJsZVdhcm5pbmcpe2NvbnNvbGUud2FybihgRG9jdXNhdXJ1cyBicm93c2VyIHN0b3JhZ2UgaXMgbm90IGF2YWlsYWJsZS4KUG9zc2libGUgcmVhc29uczogcnVubmluZyBEb2N1c2F1cnVzIGluIGFuIElmcmFtZSwgaW4gYW4gSW5jb2duaXRvIGJyb3dzZXIgc2Vzc2lvbiwgb3IgdXNpbmcgdG9vIHN0cmljdCBicm93c2VyIHByaXZhY3kgc2V0dGluZ3MuYCxlcnJvcik7aGFzTG9nZ2VkQnJvd3NlclN0b3JhZ2VOb3RBdmFpbGFibGVXYXJuaW5nPXRydWU7fX1jb25zdCBOb29wU3RvcmFnZVNsb3Q9e2dldDooKT0+bnVsbCxzZXQ6KCk9Pnt9LGRlbDooKT0+e319Oy8vICBGYWlsLWZhc3QsIGFzIHN0b3JhZ2UgQVBJcyBzaG91bGQgbm90IGJlIHVzZWQgZHVyaW5nIHRoZSBTU1IgcHJvY2VzcwpmdW5jdGlvbiBjcmVhdGVTZXJ2ZXJTdG9yYWdlU2xvdChrZXkpe2Z1bmN0aW9uIHRocm93RXJyb3IoKXt0aHJvdyBuZXcgRXJyb3IoYElsbGVnYWwgc3RvcmFnZSBBUEkgdXNhZ2UgZm9yIHN0b3JhZ2Uga2V5PSR7a2V5fS4KRG9jdXNhdXJ1cyBzdG9yYWdlIEFQSXMgYXJlIG5vdCBzdXBwb3NlZCB0byBiZSBjYWxsZWQgb24gdGhlIHNlcnZlci1yZW5kZXJpbmcgcHJvY2Vzcy4KUGxlYXNlIG9ubHkgY2FsbCBzdG9yYWdlIEFQSXMgaW4gZWZmZWN0cyBhbmQgZXZlbnQgaGFuZGxlcnMuYCk7fXJldHVybntnZXQ6dGhyb3dFcnJvcixzZXQ6dGhyb3dFcnJvcixkZWw6dGhyb3dFcnJvcn07fS8qKgogKiBDcmVhdGVzIGFuIG9iamVjdCBmb3IgYWNjZXNzaW5nIGEgcGFydGljdWxhciBrZXkgaW4gbG9jYWxTdG9yYWdlLgogKi9jb25zdCBjcmVhdGVTdG9yYWdlU2xvdD0oa2V5LG9wdGlvbnMpPT57aWYodHlwZW9mIHdpbmRvdz09PSd1bmRlZmluZWQnKXtyZXR1cm4gY3JlYXRlU2VydmVyU3RvcmFnZVNsb3Qoa2V5KTt9Y29uc3QgYnJvd3NlclN0b3JhZ2U9Z2V0QnJvd3NlclN0b3JhZ2Uob3B0aW9ucz09PW51bGx8fG9wdGlvbnM9PT12b2lkIDA/dm9pZCAwOm9wdGlvbnMucGVyc2lzdGVuY2UpO2lmKGJyb3dzZXJTdG9yYWdlPT09bnVsbCl7cmV0dXJuIE5vb3BTdG9yYWdlU2xvdDt9cmV0dXJue2dldDooKT0+YnJvd3NlclN0b3JhZ2UuZ2V0SXRlbShrZXkpLHNldDp2YWx1ZT0+YnJvd3NlclN0b3JhZ2Uuc2V0SXRlbShrZXksdmFsdWUpLGRlbDooKT0+YnJvd3NlclN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpfTt9O2V4cG9ydHMuY3JlYXRlU3RvcmFnZVNsb3Q9Y3JlYXRlU3RvcmFnZVNsb3Q7LyoqCiAqIFJldHVybnMgYSBsaXN0IG9mIGFsbCB0aGUga2V5cyBjdXJyZW50bHkgc3RvcmVkIGluIGJyb3dzZXIgc3RvcmFnZQogKiBvciBhbiBlbXB0eSBsaXN0IGlmIGJyb3dzZXIgc3RvcmFnZSBjYW4ndCBiZSBhY2Nlc3NlZC4KICovZnVuY3Rpb24gbGlzdFN0b3JhZ2VLZXlzKHN0b3JhZ2VUeXBlPURlZmF1bHRTdG9yYWdlVHlwZSl7Y29uc3QgYnJvd3NlclN0b3JhZ2U9Z2V0QnJvd3NlclN0b3JhZ2Uoc3RvcmFnZVR5cGUpO2lmKCFicm93c2VyU3RvcmFnZSl7cmV0dXJuW107fWNvbnN0IGtleXM9W107Zm9yKGxldCBpPTA7aTxicm93c2VyU3RvcmFnZS5sZW5ndGg7aSs9MSl7Y29uc3Qga2V5PWJyb3dzZXJTdG9yYWdlLmtleShpKTtpZihrZXkhPT1udWxsKXtrZXlzLnB1c2goa2V5KTt9fXJldHVybiBrZXlzO31leHBvcnRzLmxpc3RTdG9yYWdlS2V5cz1saXN0U3RvcmFnZUtleXM7"},{"version":3,"sources":["/home/prashanth/Projects/pupilfirst/node_modules/@docusaurus/theme-common/lib/utils/storageUtils.js"],"names":["Object","defineProperty","exports","value","listStorageKeys","createStorageSlot","StorageTypes","DefaultStorageType","getBrowserStorage","storageType","window","Error","e","logOnceBrowserStorageNotAvailableWarning","hasLoggedBrowserStorageNotAvailableWarning","error","console","warn","NoopStorageSlot","get","set","del","createServerStorageSlot","key","throwError","options","browserStorage","persistence","getItem","setItem","removeItem","keys","i","length","push"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.listStorageKeys = exports.createStorageSlot = void 0;\nconst StorageTypes = ['localStorage', 'sessionStorage', 'none'];\nconst DefaultStorageType = 'localStorage';\n// Will return null browser storage is unavailable (like running Docusaurus in iframe)\n// See https://github.com/facebook/docusaurus/pull/4501\nfunction getBrowserStorage(storageType = DefaultStorageType) {\n    if (typeof window === 'undefined') {\n        throw new Error('Browser storage is not available on NodeJS / Docusaurus SSR process');\n    }\n    if (storageType === 'none') {\n        return null;\n    }\n    else {\n        try {\n            return window[storageType];\n        }\n        catch (e) {\n            logOnceBrowserStorageNotAvailableWarning(e);\n            return null;\n        }\n    }\n}\n/**\n * Poor man's memoization to avoid logging multiple times the same warning\n * Sometimes, localStorage/sessionStorage is unavailable due to browser policies\n */\nlet hasLoggedBrowserStorageNotAvailableWarning = false;\nfunction logOnceBrowserStorageNotAvailableWarning(error) {\n    if (!hasLoggedBrowserStorageNotAvailableWarning) {\n        console.warn(`Docusaurus browser storage is not available.\nPossible reasons: running Docusaurus in an Iframe, in an Incognito browser session, or using too strict browser privacy settings.`, error);\n        hasLoggedBrowserStorageNotAvailableWarning = true;\n    }\n}\nconst NoopStorageSlot = {\n    get: () => null,\n    set: () => { },\n    del: () => { },\n};\n//  Fail-fast, as storage APIs should not be used during the SSR process\nfunction createServerStorageSlot(key) {\n    function throwError() {\n        throw new Error(`Illegal storage API usage for storage key=${key}.\nDocusaurus storage APIs are not supposed to be called on the server-rendering process.\nPlease only call storage APIs in effects and event handlers.`);\n    }\n    return {\n        get: throwError,\n        set: throwError,\n        del: throwError,\n    };\n}\n/**\n * Creates an object for accessing a particular key in localStorage.\n */\nconst createStorageSlot = (key, options) => {\n    if (typeof window === 'undefined') {\n        return createServerStorageSlot(key);\n    }\n    const browserStorage = getBrowserStorage(options === null || options === void 0 ? void 0 : options.persistence);\n    if (browserStorage === null) {\n        return NoopStorageSlot;\n    }\n    return {\n        get: () => browserStorage.getItem(key),\n        set: (value) => browserStorage.setItem(key, value),\n        del: () => browserStorage.removeItem(key),\n    };\n};\nexports.createStorageSlot = createStorageSlot;\n/**\n * Returns a list of all the keys currently stored in browser storage\n * or an empty list if browser storage can't be accessed.\n */\nfunction listStorageKeys(storageType = DefaultStorageType) {\n    const browserStorage = getBrowserStorage(storageType);\n    if (!browserStorage) {\n        return [];\n    }\n    const keys = [];\n    for (let i = 0; i < browserStorage.length; i += 1) {\n        const key = browserStorage.key(i);\n        if (key !== null) {\n            keys.push(key);\n        }\n    }\n    return keys;\n}\nexports.listStorageKeys = listStorageKeys;\n"]}]}