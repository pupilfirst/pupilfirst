{"remainingRequest":"/home/prashanth/Projects/pupilfirst/node_modules/babel-loader/lib/index.js??ref--9-1!/home/prashanth/Projects/pupilfirst/node_modules/@docusaurus/core/lib/client/preload.js","dependencies":[{"path":"/home/prashanth/Projects/pupilfirst/node_modules/@docusaurus/core/lib/client/preload.js","mtime":1646972625193},{"path":"/home/prashanth/Projects/pupilfirst/node_modules/cache-loader/dist/cjs.js","mtime":1646972628610},{"path":"/home/prashanth/Projects/pupilfirst/node_modules/babel-loader/lib/index.js","mtime":1646972593924}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9pbXBvcnR7bWF0Y2hSb3V0ZXN9ZnJvbSdyZWFjdC1yb3V0ZXItY29uZmlnJzsvKioKICogSGVscGVyIGZ1bmN0aW9uIHRvIG1ha2Ugc3VyZSBhbGwgYXN5bmMgY29tcG9uZW50cyBmb3IgdGhhdCBwYXJ0aWN1bGFyIHJvdXRlCiAqIGlzIHByZWxvYWRlZCBiZWZvcmUgcmVuZGVyaW5nLiBUaGlzIGlzIGVzcGVjaWFsbHkgdXNlZnVsIHRvIGF2b2lkIGxvYWRpbmcgc2NyZWVucy4KICoKICogQHBhcmFtIHJvdXRlcyByZWFjdC1yb3V0ZXItY29uZmlnCiAqIEBwYXJhbSBwYXRobmFtZSB0aGUgcm91dGUgcGF0aG5hbWUsIGV4YW1wbGU6IC9kb2NzL2luc3RhbGxhdGlvbgogKiBAcmV0dXJucyBQcm9taXNlIG9iamVjdCByZXByZXNlbnRzIHdoZXRoZXIgcGF0aG5hbWUgaGFzIGJlZW4gcHJlbG9hZGVkCiAqL2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHByZWxvYWQocm91dGVzLHBhdGhuYW1lKXtjb25zdCBtYXRjaGVzPW1hdGNoUm91dGVzKHJvdXRlcyxwYXRobmFtZSk7cmV0dXJuIFByb21pc2UuYWxsKG1hdGNoZXMubWFwKG1hdGNoPT57Y29uc3R7Y29tcG9uZW50fT1tYXRjaC5yb3V0ZTsvLyBAdHMtZXhwZWN0LWVycm9yOiBDb21wb25lbnRDcmVhdG9yIGluamVjdGVkIHRoaXMgbWV0aG9kLgppZihjb21wb25lbnQmJmNvbXBvbmVudC5wcmVsb2FkKXsvLyBAdHMtZXhwZWN0LWVycm9yOiBjaGVja2VkIGFib3ZlLgpyZXR1cm4gY29tcG9uZW50LnByZWxvYWQoKTt9cmV0dXJuIHVuZGVmaW5lZDt9KSk7fQ=="},{"version":3,"sources":["/home/prashanth/Projects/pupilfirst/node_modules/@docusaurus/core/lib/client/preload.js"],"names":["matchRoutes","preload","routes","pathname","matches","Promise","all","map","match","component","route","undefined"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GACA,OAASA,WAAT,KAA4B,qBAA5B,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAe,SAASC,CAAAA,OAAT,CAAiBC,MAAjB,CAAyBC,QAAzB,CAAmC,CAC9C,KAAMC,CAAAA,OAAO,CAAGJ,WAAW,CAACE,MAAD,CAASC,QAAT,CAA3B,CACA,MAAOE,CAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,GAAR,CAAaC,KAAD,EAAW,CACtC,KAAM,CAAEC,SAAF,EAAgBD,KAAK,CAACE,KAA5B,CACA;AACA,GAAID,SAAS,EAAIA,SAAS,CAACR,OAA3B,CAAoC,CAChC;AACA,MAAOQ,CAAAA,SAAS,CAACR,OAAV,EAAP,CACH,CACD,MAAOU,CAAAA,SAAP,CACH,CARkB,CAAZ,CAAP,CASH","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { matchRoutes } from 'react-router-config';\n/**\n * Helper function to make sure all async components for that particular route\n * is preloaded before rendering. This is especially useful to avoid loading screens.\n *\n * @param routes react-router-config\n * @param pathname the route pathname, example: /docs/installation\n * @returns Promise object represents whether pathname has been preloaded\n */\nexport default function preload(routes, pathname) {\n    const matches = matchRoutes(routes, pathname);\n    return Promise.all(matches.map((match) => {\n        const { component } = match.route;\n        // @ts-expect-error: ComponentCreator injected this method.\n        if (component && component.preload) {\n            // @ts-expect-error: checked above.\n            return component.preload();\n        }\n        return undefined;\n    }));\n}\n"]}]}