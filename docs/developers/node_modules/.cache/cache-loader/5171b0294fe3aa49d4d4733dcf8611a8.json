{"remainingRequest":"/home/prashanth/Projects/pupilfirst/node_modules/babel-loader/lib/index.js??ref--9-1!/home/prashanth/Projects/pupilfirst/node_modules/@docusaurus/core/lib/client/exports/Interpolate.js","dependencies":[{"path":"/home/prashanth/Projects/pupilfirst/node_modules/@docusaurus/core/lib/client/exports/Interpolate.js","mtime":1646972625193},{"path":"/home/prashanth/Projects/pupilfirst/node_modules/cache-loader/dist/cjs.js","mtime":1646972628610},{"path":"/home/prashanth/Projects/pupilfirst/node_modules/babel-loader/lib/index.js","mtime":1646972593924}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9pbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7LyoKTWluaW1hbCBpbXBsZW1lbnRhdGlvbiBvZiBhIFJlYWN0IGludGVycG9sYXRlIGNvbXBvbmVudC4KV2UgZG9uJ3Qgc2hpcCBhIG1hcmtkb3duIHBhcnNlciBub3IgYSBmZWF0dXJlLWNvbXBsZXRlIGkxOG4gbGlicmFyeSBvbiBwdXJwb3NlLgpNb3JlIGRldGFpbHMgaGVyZTogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2RvY3VzYXVydXMvcHVsbC80Mjk1CiovY29uc3QgVmFsdWVSZWdleHA9L3tcdyt9L2c7Y29uc3QgVmFsdWVGb3VuZE1hcmtlcj0ne30nOy8vIGRvZXMgbm90IGNhcmUgbXVjaApleHBvcnQgZnVuY3Rpb24gaW50ZXJwb2xhdGUodGV4dCx2YWx1ZXMpe2NvbnN0IGVsZW1lbnRzPVtdO2NvbnN0IHByb2Nlc3NlZFRleHQ9dGV4dC5yZXBsYWNlKFZhbHVlUmVnZXhwLG1hdGNoPT57Ly8gcmVtb3ZlIHt7IGFuZCB9fSBhcm91bmQgdGhlIHBsYWNlaG9sZGVyCmNvbnN0IGtleT1tYXRjaC5zdWJzdHIoMSxtYXRjaC5sZW5ndGgtMik7Y29uc3QgdmFsdWU9dmFsdWVzPT09bnVsbHx8dmFsdWVzPT09dm9pZCAwP3ZvaWQgMDp2YWx1ZXNba2V5XTtpZih0eXBlb2YgdmFsdWUhPT0ndW5kZWZpbmVkJyl7Y29uc3QgZWxlbWVudD0vKiNfX1BVUkVfXyovUmVhY3QuaXNWYWxpZEVsZW1lbnQodmFsdWUpP3ZhbHVlOi8vIEZvciBub24tUmVhY3QgZWxlbWVudHM6IGJhc2ljIHByaW1pdGl2ZS0+c3RyaW5nIGNvbnZlcnNpb24KU3RyaW5nKHZhbHVlKTtlbGVtZW50cy5wdXNoKGVsZW1lbnQpO3JldHVybiBWYWx1ZUZvdW5kTWFya2VyO31lbHNle3JldHVybiBtYXRjaDsvLyBubyBtYXRjaD8gYWRkIHdhcm5pbmc/Cn19KTsvLyBObyBpbnRlcnBvbGF0aW9uIHRvIGJlIGRvbmU6IGp1c3QgcmV0dXJuIHRoZSB0ZXh0CmlmKGVsZW1lbnRzLmxlbmd0aD09PTApe3JldHVybiB0ZXh0O30vLyBCYXNpYyBzdHJpbmcgaW50ZXJwb2xhdGlvbjogcmV0dXJucyBpbnRlcnBvbGF0ZWQgc3RyaW5nCmVsc2UgaWYoZWxlbWVudHMuZXZlcnkoZWw9PnR5cGVvZiBlbD09PSdzdHJpbmcnKSl7cmV0dXJuIHByb2Nlc3NlZFRleHQuc3BsaXQoVmFsdWVGb3VuZE1hcmtlcikucmVkdWNlKChzdHIsdmFsdWUsaW5kZXgpPT57dmFyIF9hO3JldHVybiBzdHIuY29uY2F0KHZhbHVlKS5jb25jYXQoKF9hPWVsZW1lbnRzW2luZGV4XSkhPT1udWxsJiZfYSE9PXZvaWQgMD9fYTonJyk7fSwnJyk7fS8vIEpTWCBpbnRlcnBvbGF0aW9uOiByZXR1cm5zIFJlYWN0Tm9kZQplbHNle3JldHVybiBwcm9jZXNzZWRUZXh0LnNwbGl0KFZhbHVlRm91bmRNYXJrZXIpLnJlZHVjZSgoYXJyYXksdmFsdWUsaW5kZXgpPT57cmV0dXJuWy4uLmFycmF5LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LHtrZXk6aW5kZXh9LHZhbHVlLGVsZW1lbnRzW2luZGV4XSldO30sW10pO319ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW50ZXJwb2xhdGUoe2NoaWxkcmVuLHZhbHVlc30pe3JldHVybiBpbnRlcnBvbGF0ZShjaGlsZHJlbix2YWx1ZXMpO30="},{"version":3,"sources":["/home/prashanth/Projects/pupilfirst/node_modules/@docusaurus/core/lib/client/exports/Interpolate.js"],"names":["React","ValueRegexp","ValueFoundMarker","interpolate","text","values","elements","processedText","replace","match","key","substr","length","value","element","isValidElement","String","push","every","el","split","reduce","str","index","_a","concat","array","createElement","Fragment","Interpolate","children"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA;AACA;AACA;AACA,EACA,KAAMC,CAAAA,WAAW,CAAG,QAApB,CACA,KAAMC,CAAAA,gBAAgB,CAAG,IAAzB,CAA+B;AAC/B,MAAO,SAASC,CAAAA,WAAT,CAAqBC,IAArB,CAA2BC,MAA3B,CAAmC,CACtC,KAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACA,KAAMC,CAAAA,aAAa,CAAGH,IAAI,CAACI,OAAL,CAAaP,WAAb,CAA2BQ,KAAD,EAAW,CACvD;AACA,KAAMC,CAAAA,GAAG,CAAGD,KAAK,CAACE,MAAN,CAAa,CAAb,CAAgBF,KAAK,CAACG,MAAN,CAAe,CAA/B,CAAZ,CACA,KAAMC,CAAAA,KAAK,CAAGR,MAAM,GAAK,IAAX,EAAmBA,MAAM,GAAK,IAAK,EAAnC,CAAuC,IAAK,EAA5C,CAAgDA,MAAM,CAACK,GAAD,CAApE,CACA,GAAI,MAAOG,CAAAA,KAAP,GAAiB,WAArB,CAAkC,CAC9B,KAAMC,CAAAA,OAAO,CAAG,aAAAd,KAAK,CAACe,cAAN,CAAqBF,KAArB,EACVA,KADU,CAEV;AACEG,MAAM,CAACH,KAAD,CAHd,CAIAP,QAAQ,CAACW,IAAT,CAAcH,OAAd,EACA,MAAOZ,CAAAA,gBAAP,CACH,CAPD,IAQK,CACD,MAAOO,CAAAA,KAAP,CAAc;AACjB,CACJ,CAfqB,CAAtB,CAgBA;AACA,GAAIH,QAAQ,CAACM,MAAT,GAAoB,CAAxB,CAA2B,CACvB,MAAOR,CAAAA,IAAP,CACH,CACD;AAHA,IAIK,IAAIE,QAAQ,CAACY,KAAT,CAAgBC,EAAD,EAAQ,MAAOA,CAAAA,EAAP,GAAc,QAArC,CAAJ,CAAoD,CACrD,MAAOZ,CAAAA,aAAa,CACfa,KADE,CACIlB,gBADJ,EAEFmB,MAFE,CAEK,CAACC,GAAD,CAAMT,KAAN,CAAaU,KAAb,GAAuB,CAC/B,GAAIC,CAAAA,EAAJ,CACA,MAAOF,CAAAA,GAAG,CAACG,MAAJ,CAAWZ,KAAX,EAAkBY,MAAlB,CAAyB,CAACD,EAAE,CAAGlB,QAAQ,CAACiB,KAAD,CAAd,IAA2B,IAA3B,EAAmCC,EAAE,GAAK,IAAK,EAA/C,CAAmDA,EAAnD,CAAwD,EAAjF,CAAP,CACH,CALM,CAKJ,EALI,CAAP,CAMH,CACD;AARK,IASA,CACD,MAAOjB,CAAAA,aAAa,CACfa,KADE,CACIlB,gBADJ,EAEFmB,MAFE,CAEK,CAACK,KAAD,CAAQb,KAAR,CAAeU,KAAf,GAAyB,CACjC,MAAO,CACH,GAAGG,KADA,cAEH1B,KAAK,CAAC2B,aAAN,CAAoB3B,KAAK,CAAC4B,QAA1B,CAAoC,CAAElB,GAAG,CAAEa,KAAP,CAApC,CACIV,KADJ,CAEIP,QAAQ,CAACiB,KAAD,CAFZ,CAFG,CAAP,CAMH,CATM,CASJ,EATI,CAAP,CAUH,CACJ,CACD,cAAe,SAASM,CAAAA,WAAT,CAAqB,CAAEC,QAAF,CAAYzB,MAAZ,CAArB,CAA4C,CACvD,MAAOF,CAAAA,WAAW,CAAC2B,QAAD,CAAWzB,MAAX,CAAlB,CACH","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\n/*\nMinimal implementation of a React interpolate component.\nWe don't ship a markdown parser nor a feature-complete i18n library on purpose.\nMore details here: https://github.com/facebook/docusaurus/pull/4295\n*/\nconst ValueRegexp = /{\\w+}/g;\nconst ValueFoundMarker = '{}'; // does not care much\nexport function interpolate(text, values) {\n    const elements = [];\n    const processedText = text.replace(ValueRegexp, (match) => {\n        // remove {{ and }} around the placeholder\n        const key = match.substr(1, match.length - 2);\n        const value = values === null || values === void 0 ? void 0 : values[key];\n        if (typeof value !== 'undefined') {\n            const element = React.isValidElement(value)\n                ? value\n                : // For non-React elements: basic primitive->string conversion\n                    String(value);\n            elements.push(element);\n            return ValueFoundMarker;\n        }\n        else {\n            return match; // no match? add warning?\n        }\n    });\n    // No interpolation to be done: just return the text\n    if (elements.length === 0) {\n        return text;\n    }\n    // Basic string interpolation: returns interpolated string\n    else if (elements.every((el) => typeof el === 'string')) {\n        return processedText\n            .split(ValueFoundMarker)\n            .reduce((str, value, index) => {\n            var _a;\n            return str.concat(value).concat((_a = elements[index]) !== null && _a !== void 0 ? _a : '');\n        }, '');\n    }\n    // JSX interpolation: returns ReactNode\n    else {\n        return processedText\n            .split(ValueFoundMarker)\n            .reduce((array, value, index) => {\n            return [\n                ...array,\n                React.createElement(React.Fragment, { key: index },\n                    value,\n                    elements[index]),\n            ];\n        }, []);\n    }\n}\nexport default function Interpolate({ children, values, }) {\n    return interpolate(children, values);\n}\n"]}]}